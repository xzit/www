---
import { cn } from "@/lib/utils";

import { buttonVariants } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { RiArrowRightLine } from "@remixicon/react";
import { GitHubLink } from "@/components/GithubStars";

const { items } = Astro.props;
---

<div class="grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-2">
  {
    items.map((project: any) => (
      <Card className="grid grid-rows-[auto_1fr_auto]">
        <CardHeader>
          <CardTitle className="text-xl">{project.title}</CardTitle>
          <CardDescription className="flex items-center gap-3">
            <span class="relative flex size-2">
              <span
                class={cn(
                  "absolute inline-flex h-full w-full animate-ping rounded-full bg-sky-400 opacity-75",
                  project.status === "published"
                    ? "bg-green-400"
                    : project.status === "in-progress"
                      ? "bg-orange-400"
                      : "bg-red-400"
                )}
              />
              <span
                class={cn(
                  "relative inline-flex size-2 rounded-full bg-sky-500",
                  project.status === "published"
                    ? "bg-green-500"
                    : project.status === "in-progress"
                      ? "bg-orange-500"
                      : "bg-red-500"
                )}
              />
            </span>
            <span class="text-muted-foreground">
              {project.status === "published"
                ? "En l√≠nea"
                : project.status === "in-progress"
                  ? "En desarrollo"
                  : "En pausa"}
            </span>
          </CardDescription>
        </CardHeader>
        <CardContent>
          <p>{project.description}</p>
        </CardContent>
        <CardFooter className="flex items-center gap-2">
          {project.url && (
            <a
              href={project.url}
              target="_blank"
              rel="noopener"
              class={cn(buttonVariants({ variant: "outline" }))}
            >
              Ver proyecto <RiArrowRightLine className="size-5" />
            </a>
          )}
          {project.github && (
            <a
              href={`https://github.com/${project.github}`}
              target="_blank"
              rel="noopener noreferrer"
              class={cn(buttonVariants({ variant: "ghost" }), "px-2.5")}
            >
              <GitHubLink repo={project.github} client:load />
            </a>
          )}
        </CardFooter>
      </Card>
    ))
  }
</div>
