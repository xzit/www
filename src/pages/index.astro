---
import "@/styles/global.css";
import Layout from "@/layouts/sidebar.astro";
import { createReader } from "@keystatic/core/reader";
import keystaticConfig from "keystatic.config";
import TechStack from "@/components/home/TechStack";
import Projects from "@/components/home/Projects.astro";
import LatestPosts from "@/components/home/LatestPosts.astro";
import { getCollection, type CollectionEntry } from "astro:content";

const reader = createReader(process.cwd(), keystaticConfig);
const home = await reader.singletons.home.read();

type Project = Awaited<ReturnType<typeof reader.collections.projects.read>>;
type FeaturedProject = (Project extends null ? never : Project) & {
  slug: string;
};

let projects: FeaturedProject[] = [];
if (home && Array.isArray(home.projects)) {
  const allFeatured = await Promise.all(
    home.projects.map(async (slug) => {
      const project = await reader.collections.projects.read(slug);
      return { ...project, slug } as FeaturedProject;
    }),
  );
  projects = allFeatured.filter((project) => project !== null);
}

const allPosts: CollectionEntry<"posts">[] = await getCollection(
  "posts",
  (post: any) => post.data.published,
);
const posts: CollectionEntry<"posts">[] = allPosts.sort(
  (a, b) =>
    new Date(b.data.published).getTime() - new Date(a.data.published).getTime(),
);
---

<Layout title="Xzit" description="">
  <div class="flex-1 space-y-10">
    {
      projects.length !== 0 && (
        <div class="space-y-4">
          <h2 class="text-4xl">Proyectos</h2>
          <Projects items={projects} />
        </div>
      )
    }
    {
      home?.stack?.length !== 0 && (
        <div class="space-y-4">
          <h2 class="text-4xl">Tecnolog√≠as</h2>
          <TechStack stack={home?.stack ?? []} client:load />
        </div>
      )
    }
    {
      posts.length !== 0 && (
        <div class="space-y-4">
          <h2 class="text-4xl">Blog</h2>
          <LatestPosts posts={posts.slice(0, 11)} />
        </div>
      )
    }
  </div>
</Layout>
